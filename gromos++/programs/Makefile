# Makefile.in generated automatically by automake 1.4-p4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This is the programs automake template.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /home/mika/igc4/g++/CVS/gromos++
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/gromos
pkglibdir = $(libdir)/gromos
pkgincludedir = $(includedir)/gromos

top_builddir = ..

ACLOCAL = aclocal
AUTOCONF = autoconf
AUTOMAKE = automake
AUTOHEADER = autoheader

INSTALL = /usr/local/bin/install -c
INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = sparc-sun-solaris2.8
AS = @AS@
CC = gcc
CXX = g++
DLLTOOL = @DLLTOOL@
ECHO = /usr/ucb/echo
EXEEXT = 
GROMOS_MAJOR_VERSION = 0
GROMOS_MICRO_VERSION = 1
GROMOS_MINOR_VERSION = 1
GROMOS_VERSION = 0.1.1
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
MAINT = #
MAKEINFO = makeinfo
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = gromos
RANLIB = ranlib
STRIP = strip
VERSION = 0.1.1

INCLUDES = -I../src

bin_PROGRAMS = rmsd                convert                noe                rgyr                vmdam                tser                tstrip                edyn                rmsf                dipole                cluster                checkbox                contop                comtop                redtop                copy_box                buildbox                perttop                explode                Hbondintra                Hbondinter                dist                frameout                oparam                cluster_analyze


oparam_SOURCES = oparam.cc              
frameout_SOURCES = frameout.cc
rmsd_SOURCES = rmsd.cc
Hbondintra_SOURCES = Hbondintra.cc
Hbondinter_SOURCES = Hbondinter.cc
convert_SOURCES = convert.cc
noe_SOURCES = noe.cc
rgyr_SOURCES = rgyr.cc
vmdam_SOURCES = vmdam.cc
tser_SOURCES = tser.cc
tstrip_SOURCES = tstrip.cc
edyn_SOURCES = edyn.cc
rmsf_SOURCES = rmsf.cc
dipole_SOURCES = dipole.cc
cluster_SOURCES = cluster.cc
checkbox_SOURCES = checkbox.cc
contop_SOURCES = contop.cc
comtop_SOURCES = comtop.cc
redtop_SOURCES = redtop.cc
copy_box_SOURCES = copy_box.cc
buildbox_SOURCES = buildbox.cc
perttop_SOURCES = perttop.cc
explode_SOURCES = explode.cc
cluster_analyze_SOURCES = cluster_analyze.cc
dist_SOURCES = dist.cc

rmsd_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/fit/libfit.la 	$(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


convert_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/fit/libfit.la 	$(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


noe_LDADD = $(top_builddir)/src/args/libargs.la             $(top_builddir)/src/utils/libutils.la             $(top_builddir)/src/bound/libbound.la             $(top_builddir)/src/fit/libfit.la 	    $(top_builddir)/src/gio/libgio.la             $(top_builddir)/src/gcore/libgcore.la             $(top_builddir)/src/gmath/libgmath.la


rgyr_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


vmdam_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


tser_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


tstrip_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


edyn_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


rmsf_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


dipole_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


cluster_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


cluster_analyze_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


checkbox_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


dist_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


contop_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la


comtop_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la


redtop_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/gcore/libgcore.la


copy_box_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


buildbox_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


perttop_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la


explode_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/fit/libfit.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


Hbondintra_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


Hbondinter_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


frameout_LDADD = $(top_builddir)/src/args/libargs.la         $(top_builddir)/src/bound/libbound.la         $(top_builddir)/src/utils/libutils.la         $(top_builddir)/src/gio/libgio.la         $(top_builddir)/src/gcore/libgcore.la         $(top_builddir)/src/gmath/libgmath.la


oparam_LDADD = $(top_builddir)/src/args/libargs.la       $(top_builddir)/src/bound/libbound.la       $(top_builddir)/src/gio/libgio.la       $(top_builddir)/src/gcore/libgcore.la       $(top_builddir)/src/gmath/libgmath.la

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  rmsd$(EXEEXT) convert$(EXEEXT) noe$(EXEEXT) \
rgyr$(EXEEXT) vmdam$(EXEEXT) tser$(EXEEXT) tstrip$(EXEEXT) \
edyn$(EXEEXT) rmsf$(EXEEXT) dipole$(EXEEXT) cluster$(EXEEXT) \
checkbox$(EXEEXT) contop$(EXEEXT) comtop$(EXEEXT) redtop$(EXEEXT) \
copy_box$(EXEEXT) buildbox$(EXEEXT) perttop$(EXEEXT) explode$(EXEEXT) \
Hbondintra$(EXEEXT) Hbondinter$(EXEEXT) dist$(EXEEXT) frameout$(EXEEXT) \
oparam$(EXEEXT) cluster_analyze$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = -DHAVE_DLFCN_H=1 -DSTDC_HEADERS=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_UNISTD_H=1 -DHAVE_LIBM=1  -I. -I$(srcdir) 
CPPFLAGS = 
LDFLAGS = 
LIBS = -lm 
rmsd_OBJECTS =  rmsd.$(OBJEXT)
rmsd_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la \
$(top_builddir)/src/utils/libutils.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
rmsd_LDFLAGS = 
convert_OBJECTS =  convert.$(OBJEXT)
convert_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
convert_LDFLAGS = 
noe_OBJECTS =  noe.$(OBJEXT)
noe_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/utils/libutils.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
noe_LDFLAGS = 
rgyr_OBJECTS =  rgyr.$(OBJEXT)
rgyr_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
rgyr_LDFLAGS = 
vmdam_OBJECTS =  vmdam.$(OBJEXT)
vmdam_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la \
$(top_builddir)/src/utils/libutils.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
vmdam_LDFLAGS = 
tser_OBJECTS =  tser.$(OBJEXT)
tser_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
tser_LDFLAGS = 
tstrip_OBJECTS =  tstrip.$(OBJEXT)
tstrip_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
tstrip_LDFLAGS = 
edyn_OBJECTS =  edyn.$(OBJEXT)
edyn_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la \
$(top_builddir)/src/utils/libutils.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
edyn_LDFLAGS = 
rmsf_OBJECTS =  rmsf.$(OBJEXT)
rmsf_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la \
$(top_builddir)/src/utils/libutils.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
rmsf_LDFLAGS = 
dipole_OBJECTS =  dipole.$(OBJEXT)
dipole_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
dipole_LDFLAGS = 
cluster_OBJECTS =  cluster.$(OBJEXT)
cluster_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la \
$(top_builddir)/src/utils/libutils.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
cluster_LDFLAGS = 
checkbox_OBJECTS =  checkbox.$(OBJEXT)
checkbox_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
checkbox_LDFLAGS = 
contop_OBJECTS =  contop.$(OBJEXT)
contop_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la
contop_LDFLAGS = 
comtop_OBJECTS =  comtop.$(OBJEXT)
comtop_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la
comtop_LDFLAGS = 
redtop_OBJECTS =  redtop.$(OBJEXT)
redtop_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/utils/libutils.la \
$(top_builddir)/src/gcore/libgcore.la
redtop_LDFLAGS = 
copy_box_OBJECTS =  copy_box.$(OBJEXT)
copy_box_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
copy_box_LDFLAGS = 
buildbox_OBJECTS =  buildbox.$(OBJEXT)
buildbox_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/fit/libfit.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
buildbox_LDFLAGS = 
perttop_OBJECTS =  perttop.$(OBJEXT)
perttop_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la
perttop_LDFLAGS = 
explode_OBJECTS =  explode.$(OBJEXT)
explode_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
explode_LDFLAGS = 
Hbondintra_OBJECTS =  Hbondintra.$(OBJEXT)
Hbondintra_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
Hbondintra_LDFLAGS = 
Hbondinter_OBJECTS =  Hbondinter.$(OBJEXT)
Hbondinter_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/utils/libutils.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
Hbondinter_LDFLAGS = 
dist_OBJECTS =  dist.$(OBJEXT)
dist_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
dist_LDFLAGS = 
frameout_OBJECTS =  frameout.$(OBJEXT)
frameout_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la \
$(top_builddir)/src/utils/libutils.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
frameout_LDFLAGS = 
oparam_OBJECTS =  oparam.$(OBJEXT)
oparam_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la $(top_builddir)/src/gio/libgio.la \
$(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
oparam_LDFLAGS = 
cluster_analyze_OBJECTS =  cluster_analyze.$(OBJEXT)
cluster_analyze_DEPENDENCIES =  $(top_builddir)/src/args/libargs.la \
$(top_builddir)/src/bound/libbound.la \
$(top_builddir)/src/utils/libutils.la $(top_builddir)/src/fit/libfit.la \
$(top_builddir)/src/gio/libgio.la $(top_builddir)/src/gcore/libgcore.la \
$(top_builddir)/src/gmath/libgmath.la
cluster_analyze_LDFLAGS = 
CXXFLAGS = -g -O2 -Wall
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
DEP_FILES =  .deps/Hbondinter.P .deps/Hbondintra.P .deps/buildbox.P \
.deps/checkbox.P .deps/cluster.P .deps/cluster_analyze.P .deps/comtop.P \
.deps/contop.P .deps/convert.P .deps/copy_box.P .deps/dipole.P \
.deps/dist.P .deps/edyn.P .deps/explode.P .deps/frameout.P .deps/noe.P \
.deps/oparam.P .deps/perttop.P .deps/redtop.P .deps/rgyr.P .deps/rmsd.P \
.deps/rmsf.P .deps/tser.P .deps/tstrip.P .deps/vmdam.P
SOURCES = $(rmsd_SOURCES) $(convert_SOURCES) $(noe_SOURCES) $(rgyr_SOURCES) $(vmdam_SOURCES) $(tser_SOURCES) $(tstrip_SOURCES) $(edyn_SOURCES) $(rmsf_SOURCES) $(dipole_SOURCES) $(cluster_SOURCES) $(checkbox_SOURCES) $(contop_SOURCES) $(comtop_SOURCES) $(redtop_SOURCES) $(copy_box_SOURCES) $(buildbox_SOURCES) $(perttop_SOURCES) $(explode_SOURCES) $(Hbondintra_SOURCES) $(Hbondinter_SOURCES) $(dist_SOURCES) $(frameout_SOURCES) $(oparam_SOURCES) $(cluster_analyze_SOURCES)
OBJECTS = $(rmsd_OBJECTS) $(convert_OBJECTS) $(noe_OBJECTS) $(rgyr_OBJECTS) $(vmdam_OBJECTS) $(tser_OBJECTS) $(tstrip_OBJECTS) $(edyn_OBJECTS) $(rmsf_OBJECTS) $(dipole_OBJECTS) $(cluster_OBJECTS) $(checkbox_OBJECTS) $(contop_OBJECTS) $(comtop_OBJECTS) $(redtop_OBJECTS) $(copy_box_OBJECTS) $(buildbox_OBJECTS) $(perttop_OBJECTS) $(explode_OBJECTS) $(Hbondintra_OBJECTS) $(Hbondinter_OBJECTS) $(dist_OBJECTS) $(frameout_OBJECTS) $(oparam_OBJECTS) $(cluster_analyze_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cc .lo .o .obj .s
$(srcdir)/Makefile.in: # Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu programs/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

rmsd$(EXEEXT): $(rmsd_OBJECTS) $(rmsd_DEPENDENCIES)
	@rm -f rmsd$(EXEEXT)
	$(CXXLINK) $(rmsd_LDFLAGS) $(rmsd_OBJECTS) $(rmsd_LDADD) $(LIBS)

convert$(EXEEXT): $(convert_OBJECTS) $(convert_DEPENDENCIES)
	@rm -f convert$(EXEEXT)
	$(CXXLINK) $(convert_LDFLAGS) $(convert_OBJECTS) $(convert_LDADD) $(LIBS)

noe$(EXEEXT): $(noe_OBJECTS) $(noe_DEPENDENCIES)
	@rm -f noe$(EXEEXT)
	$(CXXLINK) $(noe_LDFLAGS) $(noe_OBJECTS) $(noe_LDADD) $(LIBS)

rgyr$(EXEEXT): $(rgyr_OBJECTS) $(rgyr_DEPENDENCIES)
	@rm -f rgyr$(EXEEXT)
	$(CXXLINK) $(rgyr_LDFLAGS) $(rgyr_OBJECTS) $(rgyr_LDADD) $(LIBS)

vmdam$(EXEEXT): $(vmdam_OBJECTS) $(vmdam_DEPENDENCIES)
	@rm -f vmdam$(EXEEXT)
	$(CXXLINK) $(vmdam_LDFLAGS) $(vmdam_OBJECTS) $(vmdam_LDADD) $(LIBS)

tser$(EXEEXT): $(tser_OBJECTS) $(tser_DEPENDENCIES)
	@rm -f tser$(EXEEXT)
	$(CXXLINK) $(tser_LDFLAGS) $(tser_OBJECTS) $(tser_LDADD) $(LIBS)

tstrip$(EXEEXT): $(tstrip_OBJECTS) $(tstrip_DEPENDENCIES)
	@rm -f tstrip$(EXEEXT)
	$(CXXLINK) $(tstrip_LDFLAGS) $(tstrip_OBJECTS) $(tstrip_LDADD) $(LIBS)

edyn$(EXEEXT): $(edyn_OBJECTS) $(edyn_DEPENDENCIES)
	@rm -f edyn$(EXEEXT)
	$(CXXLINK) $(edyn_LDFLAGS) $(edyn_OBJECTS) $(edyn_LDADD) $(LIBS)

rmsf$(EXEEXT): $(rmsf_OBJECTS) $(rmsf_DEPENDENCIES)
	@rm -f rmsf$(EXEEXT)
	$(CXXLINK) $(rmsf_LDFLAGS) $(rmsf_OBJECTS) $(rmsf_LDADD) $(LIBS)

dipole$(EXEEXT): $(dipole_OBJECTS) $(dipole_DEPENDENCIES)
	@rm -f dipole$(EXEEXT)
	$(CXXLINK) $(dipole_LDFLAGS) $(dipole_OBJECTS) $(dipole_LDADD) $(LIBS)

cluster$(EXEEXT): $(cluster_OBJECTS) $(cluster_DEPENDENCIES)
	@rm -f cluster$(EXEEXT)
	$(CXXLINK) $(cluster_LDFLAGS) $(cluster_OBJECTS) $(cluster_LDADD) $(LIBS)

checkbox$(EXEEXT): $(checkbox_OBJECTS) $(checkbox_DEPENDENCIES)
	@rm -f checkbox$(EXEEXT)
	$(CXXLINK) $(checkbox_LDFLAGS) $(checkbox_OBJECTS) $(checkbox_LDADD) $(LIBS)

contop$(EXEEXT): $(contop_OBJECTS) $(contop_DEPENDENCIES)
	@rm -f contop$(EXEEXT)
	$(CXXLINK) $(contop_LDFLAGS) $(contop_OBJECTS) $(contop_LDADD) $(LIBS)

comtop$(EXEEXT): $(comtop_OBJECTS) $(comtop_DEPENDENCIES)
	@rm -f comtop$(EXEEXT)
	$(CXXLINK) $(comtop_LDFLAGS) $(comtop_OBJECTS) $(comtop_LDADD) $(LIBS)

redtop$(EXEEXT): $(redtop_OBJECTS) $(redtop_DEPENDENCIES)
	@rm -f redtop$(EXEEXT)
	$(CXXLINK) $(redtop_LDFLAGS) $(redtop_OBJECTS) $(redtop_LDADD) $(LIBS)

copy_box$(EXEEXT): $(copy_box_OBJECTS) $(copy_box_DEPENDENCIES)
	@rm -f copy_box$(EXEEXT)
	$(CXXLINK) $(copy_box_LDFLAGS) $(copy_box_OBJECTS) $(copy_box_LDADD) $(LIBS)

buildbox$(EXEEXT): $(buildbox_OBJECTS) $(buildbox_DEPENDENCIES)
	@rm -f buildbox$(EXEEXT)
	$(CXXLINK) $(buildbox_LDFLAGS) $(buildbox_OBJECTS) $(buildbox_LDADD) $(LIBS)

perttop$(EXEEXT): $(perttop_OBJECTS) $(perttop_DEPENDENCIES)
	@rm -f perttop$(EXEEXT)
	$(CXXLINK) $(perttop_LDFLAGS) $(perttop_OBJECTS) $(perttop_LDADD) $(LIBS)

explode$(EXEEXT): $(explode_OBJECTS) $(explode_DEPENDENCIES)
	@rm -f explode$(EXEEXT)
	$(CXXLINK) $(explode_LDFLAGS) $(explode_OBJECTS) $(explode_LDADD) $(LIBS)

Hbondintra$(EXEEXT): $(Hbondintra_OBJECTS) $(Hbondintra_DEPENDENCIES)
	@rm -f Hbondintra$(EXEEXT)
	$(CXXLINK) $(Hbondintra_LDFLAGS) $(Hbondintra_OBJECTS) $(Hbondintra_LDADD) $(LIBS)

Hbondinter$(EXEEXT): $(Hbondinter_OBJECTS) $(Hbondinter_DEPENDENCIES)
	@rm -f Hbondinter$(EXEEXT)
	$(CXXLINK) $(Hbondinter_LDFLAGS) $(Hbondinter_OBJECTS) $(Hbondinter_LDADD) $(LIBS)

dist$(EXEEXT): $(dist_OBJECTS) $(dist_DEPENDENCIES)
	@rm -f dist$(EXEEXT)
	$(CXXLINK) $(dist_LDFLAGS) $(dist_OBJECTS) $(dist_LDADD) $(LIBS)

frameout$(EXEEXT): $(frameout_OBJECTS) $(frameout_DEPENDENCIES)
	@rm -f frameout$(EXEEXT)
	$(CXXLINK) $(frameout_LDFLAGS) $(frameout_OBJECTS) $(frameout_LDADD) $(LIBS)

oparam$(EXEEXT): $(oparam_OBJECTS) $(oparam_DEPENDENCIES)
	@rm -f oparam$(EXEEXT)
	$(CXXLINK) $(oparam_LDFLAGS) $(oparam_OBJECTS) $(oparam_LDADD) $(LIBS)

cluster_analyze$(EXEEXT): $(cluster_analyze_OBJECTS) $(cluster_analyze_DEPENDENCIES)
	@rm -f cluster_analyze$(EXEEXT)
	$(CXXLINK) $(cluster_analyze_LDFLAGS) $(cluster_analyze_OBJECTS) $(cluster_analyze_LDADD) $(LIBS)
.cc.o:
	$(CXXCOMPILE) -c $<
.cc.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cc.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = programs

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu programs/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cc
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cc
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-depend distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
